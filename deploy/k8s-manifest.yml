apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${DEPLOYMENT_NAME}
  labels:
    app: ${DEPLOYMENT_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${DEPLOYMENT_NAME}
  template:
    metadata:
      labels:
        app: ${DEPLOYMENT_NAME}
    spec:
      restartPolicy: Always
      volumes:       
        - name: resource-server
          emptyDir: {}
      ${DOCKER_HUB_SECRET_NAME}

      containers:
      - name: runtime
        image: ${DOCKER_IMAGE_NAME}
        imagePullPolicy: IfNotPresent
        env:
        - name: AMQP_URL
          value: amqp://user:password@localhost:5672/nutanix
        - name: DRAW_DEMO
          value: "1"
        - name: PROCESS_EACH_N_FRAMES
          value: "10"
        ${NATS_ENDPOINT}
        ${NATS_SRC_TOPIC}
        ${NATS_DST_TOPIC}

      - name: neural-worker
        image: ${NEURAL_WORKER_VERSION}
        imagePullPolicy: IfNotPresent
        env:
        - name: ALLOW_NO_GPU
          value: "1"
        - name: AUTOSTART_WORKER
          value: "false"
        - name: AMQP_URL
          value: amqp://user:password@localhost:5672/nutanix
        - name: DEEPOMATIC_STORAGE_DIR
          value: /var/lib/deepomatic/services/worker-nn
        - name: LICENSE_FILENAME
          value: /var/lib/deepomatic/services/worker-nn/resources/license.bin
        - name: WORKFLOWS_PATH
          value: /var/lib/deepomatic/services/worker-nn/resources/workflows.json
        volumeMounts:
          - name: resource-server
            mountPath: /var/lib/deepomatic
          
            

      - name: resource-server
        image: ${RESOURCE_SERVER_VERSION}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: DEEPOMATIC_API_URL
          value: https://api.deepomatic.com        
        - name: DOWNLOAD_ON_STARTUP
          value: "1"
        - name: INIT_SYSTEM
          value: circus
        - name: VOUCHER
          value: ${NUTANIX_RUNTIME_VOUCHER}
        volumeMounts:
          - name: resource-server
            mountPath: /var/lib/deepomatic

      - name: rabbitmq
        image: rabbitmq:3.6
        imagePullPolicy: IfNotPresent
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: user
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        - name: RABBITMQ_DEFAULT_VHOST
          value: nutanix

      ${NATS_SERVICE}
---

kind: Service
apiVersion: v1
metadata:
 name: nginx-svc
 labels:
   # This will show the launch button in the ui -- do not change
   uilabel: show-play-http-aba0339ef5aea2602129ed45a63d7d7f
spec:
 selector:
   app: ${DEPLOYMENT_NAME}
 ports:
 - protocol: TCP
   name: http
   port: 8080
   nodePort: 30090
   targetPort: http
 type: NodePort
