dmake_version: 0.1
app_name: nutanix-runtime
env:
  default:
    source: ${DEEPOMATIC_CONFIG_DIR}/dev.sh
    variables:
      NEURAL_WORKER_VERSION: deepomatic/run-neural-worker:0.2.0-rc.1
      RESOURCE_SERVER_VERSION: deepomatic/run-resource-server:0.2.0-rc.1
      NUTANIX_RUNTIME_APP_ID: ${NUTANIX_RUNTIME_APP_ID}
      NUTANIX_RUNTIME_API_KEY: ${NUTANIX_RUNTIME_API_KEY}
      NUTANIX_RUNTIME_SITE_ID: ${NUTANIX_RUNTIME_SITE_ID}
      NUTANIX_RUNTIME_VOUCHER: ${NUTANIX_RUNTIME_VOUCHER}

      NATS_SRC_TOPIC_IMAGE: src_image
      NATS_DST_TOPIC_IMAGE: dst_image
      NATS_SRC_TOPIC_JSON: src_json
      NATS_DST_TOPIC_JSON: dst_json

# This deprecated (but currently required so we put a placeholder)
docker:
  base_image:
    name: nutanix-app-base
    root_image: python:3.6
    install_scripts:
      - deploy/base/install.sh
    copy_files:
      - deploy/base/requirements.txt


volumes:
  - resource-server


docker_links:
  - image_name: nats:1.4.1-linux
    link_name: nats
    probe_ports:
      - 4222/tcp
    env_exports:
      NATS_ENDPOINT: nats:4222
  - image_name: rabbitmq:3.6
    link_name: rabbitmq
    probe_ports:
      - 5672/tcp
    env:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: nutanix
    env_exports:
      AMQP_URL: amqp://user:password@rabbitmq:5672/nutanix

services:
  - service_name: app
    needed_services:
      - neural-worker
    needed_links:
      - rabbitmq
      - nats
    config:
      docker_image:
        name: deepomatic/nutanix-app-rc
        build:
          context: runtime
          dockerfile: Dockerfile
          labels:
            vendor: deepomatic
      env_override:
        DRAW_DEMO: 0
        FONT_COLOR: 4286f4
    deploy:
      stages:
        - description: Deploying on Kubernetes
          branches:
            - master
            - release
            - dev-app-manifest
          kubernetes:
            context: main
            namespace: dev
            manifest:
              template: deploy/k8s-manifest.yml
              variables:
                NEURAL_WORKER_VERSION: ${NEURAL_WORKER_VERSION}
                RESOURCE_SERVER_VERSION: ${RESOURCE_SERVER_VERSION}
                DEEPOMATIC_APP_ID: ${NUTANIX_RUNTIME_APP_ID}
                DEEPOMATIC_API_KEY: ${NUTANIX_RUNTIME_API_KEY}
                DEEPOMATIC_SITE_ID: ${NUTANIX_RUNTIME_SITE_ID}
                NUTANIX_RUNTIME_VOUCHER: ${NUTANIX_RUNTIME_VOUCHER}
                DEPLOYMENT_NAME: nutanix-app
                DOCKER_HUB_SECRET_NAME: "imagePullSecrets: [{name: docker-hub}]"
                NATS_SERVICE: "- {name: nats, image: nats:1.4.1-linux}"
                NATS_ENDPOINT: "- {name: NATS_ENDPOINT, value: localhost:4222}"
                NATS_SRC_TOPIC: "- {name: NATS_SRC_TOPIC, value: foo}"
                NATS_DST_TOPIC: "- {name: NATS_DST_TOPIC, value: bar}"
                STORAGE_CLASS: standard

  - service_name: e2e-test
    needed_services:
      - service_name: app
        env:
          DRAW_DEMO: 1
          FONT_COLOR: 4286f4
          NATS_SRC_TOPIC: ${NATS_SRC_TOPIC_IMAGE}
          NATS_DST_TOPIC: ${NATS_DST_TOPIC_IMAGE}
          PROCESS_EACH_N_FRAMES: 30
      - service_name: app
        env:
          NATS_SRC_TOPIC: ${NATS_SRC_TOPIC_JSON}
          NATS_DST_TOPIC: ${NATS_DST_TOPIC_JSON}
    needed_links:
      - nats
    tests:
      timeout: 60
      commands:
        - python tests/e2e_test.py

  - service_name: neural-worker
    needed_links:
      - rabbitmq
    needed_services:
      - resource-server
    config:
      docker_image: ${NEURAL_WORKER_VERSION}
      env_override:
        ALLOW_NO_GPU: 1
        AUTOSTART_WORKER: 'false'
        DEEPOMATIC_STORAGE_DIR: /var/lib/deepomatic/services/worker-nn
        WORKFLOWS_PATH: /var/lib/deepomatic/services/worker-nn/resources/workflows.json
      readiness_probe:
        command:
          - ls
          - /tmp/worker-nn-ready
        period_seconds: 5
      volumes:
        - resource-server:/var/lib/deepomatic/

  - service_name: resource-server
    config:
      docker_image: ${RESOURCE_SERVER_VERSION}
      env_override:
        DEEPOMATIC_API_URL: https://api.deepomatic.com
        DEEPOMATIC_APP_ID: ${NUTANIX_RUNTIME_APP_ID}
        DEEPOMATIC_API_KEY: ${NUTANIX_RUNTIME_API_KEY}
        DEEPOMATIC_SITE_ID: ${NUTANIX_RUNTIME_SITE_ID}
        DOWNLOAD_ON_STARTUP: 1
        INIT_SYSTEM: circus
        NUTANIX_RUNTIME_VOUCHER: ${NUTANIX_RUNTIME_VOUCHER}
      readiness_probe:
        command:
          - ls
          - /tmp/resource-server-ready
        period_seconds: 5
      volumes:
        - resource-server:/app
