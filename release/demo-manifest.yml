apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${DEPLOYMENT_NAME}
  labels:
    app: ${DEPLOYMENT_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${DEPLOYMENT_NAME}
  template:
    metadata:
      labels:
        app: ${DEPLOYMENT_NAME}
    spec:
      restartPolicy: Always
      volumes:
        - name: resource-server
          emptyDir: {}

      containers:
      - name: runtime
        image: ${DOCKER_IMAGE_NAME}
        imagePullPolicy: IfNotPresent
        env:
        - name: AMQP_URL
          value: amqp://user:password@localhost:5672/nutanix
        - name: DRAW_DEMO
          value: "1"
        - name: PROCESS_EACH_N_FRAMES
          value: "30"
        ${NATS_ENDPOINT}
        ${NATS_SRC_TOPIC}
        ${NATS_DST_TOPIC}

      - name: neural-worker
        image: ${NEURAL_WORKER_VERSION}
        imagePullPolicy: IfNotPresent
        env:
        - name: ALLOW_NO_GPU
          value: "1"
        - name: AUTOSTART_WORKER
          value: "false"
        - name: AMQP_URL
          value: amqp://user:password@localhost:5672/nutanix
        - name: DEEPOMATIC_STORAGE_DIR
          value: /var/lib/deepomatic/services/worker-nn
        - name: WORKFLOWS_PATH
          value: /var/lib/deepomatic/services/worker-nn/resources/workflows.json
        volumeMounts:
          - name: resource-server
            mountPath: /var/lib/deepomatic



      - name: resource-server
        image: ${RESOURCE_SERVER_VERSION}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: DEEPOMATIC_API_URL
          value: https://api.deepomatic.com
        - name: DEEPOMATIC_APP_ID
          value: "${DEEPOMATIC_APP_ID}"
        - name: DEEPOMATIC_API_KEY
          value: "${DEEPOMATIC_API_KEY}"
        - name: DEEPOMATIC_SITE_ID
          value: "${DEEPOMATIC_SITE_ID}"
        - name: DOWNLOAD_ON_STARTUP
          value: "1"
        - name: INIT_SYSTEM
          value: circus
        volumeMounts:
          - name: resource-server
            mountPath: /app

      - name: rabbitmq
        image: rabbitmq:3.6
        imagePullPolicy: IfNotPresent
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: user
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        - name: RABBITMQ_DEFAULT_VHOST
          value: nutanix
